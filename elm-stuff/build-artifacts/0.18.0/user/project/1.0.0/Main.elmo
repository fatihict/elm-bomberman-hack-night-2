var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		pressedKeys: {ctor: '[]'},
		currentTime: 0,
		player: {x: 0, y: 0, width: 50, height: 50},
		screen: {width: 650, height: 650}
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$player = function (player) {
	return A2(
		_elm_lang$svg$Svg$rect,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$x(
				_elm_lang$core$Basics$toString(player.x)),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$y(
					_elm_lang$core$Basics$toString(player.y)),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('50'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$height('50'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill('red'),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{ctor: '[]'});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$svg$Svg$svg,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$width(
				_elm_lang$core$Basics$toString(model.screen.width)),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$height(
					_elm_lang$core$Basics$toString(model.screen.height)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$rect,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('650'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$height('650'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill('darksalmon'),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _user$project$Main$player(model.player),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Tick') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{currentTime: _p0._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			var _p1 = _ohanhi$keyboard_extra$Keyboard_Extra$arrows(model.pressedKeys);
			var x = _p1.x;
			var y = _p1.y;
			var newPlayer = function (p) {
				return _elm_lang$core$Native_Utils.update(
					p,
					{
						x: A2(
							_elm_lang$core$Basics$min,
							model.screen.width - p.width,
							A2(_elm_lang$core$Basics$max, 0, p.x + (x * 50))),
						y: A2(
							_elm_lang$core$Basics$min,
							model.screen.height - p.height,
							A2(_elm_lang$core$Basics$max, 0, p.y - (y * 50)))
					});
			}(model.player);
			var newPressedKeys = A2(_ohanhi$keyboard_extra$Keyboard_Extra$update, _p0._0, model.pressedKeys);
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{pressedKeys: newPressedKeys, player: newPlayer}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$Player = F4(
	function (a, b, c, d) {
		return {x: a, y: b, width: c, height: d};
	});
var _user$project$Main$Screen = F2(
	function (a, b) {
		return {width: a, height: b};
	});
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {pressedKeys: a, player: b, screen: c, currentTime: d};
	});
var _user$project$Main$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$Main$subscriptions = function (state) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$core$Platform_Sub$map, _user$project$Main$KeyMsg, _ohanhi$keyboard_extra$Keyboard_Extra$subscriptions),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, update: _user$project$Main$update, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
